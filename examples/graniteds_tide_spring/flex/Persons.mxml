<?xml version="1.0" encoding="utf-8"?>

<!--
  GRANITE DATA SERVICES
  Copyright (C) 2007-2010 ADEQUATE SYSTEMS SARL

  This file is part of Granite Data Services.

  Granite Data Services is free software; you can redistribute it and/or modify
  it under the terms of the GNU Library General Public License as published by
  the Free Software Foundation; either version 2 of the License, or (at your
  option) any later version.

  Granite Data Services is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License
  for more details.

  You should have received a copy of the GNU Library General Public License
  along with this library; if not, see <http://www.gnu.org/licenses/>.
-->

<mx:Application
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns="*"
    xmlns:cs="test.granite.components.*"
    layout="vertical"
    backgroundGradientColors="[#0e2e7d, #6479ab]"
    preinitialize="Spring.getInstance().initApplication()"
    creationComplete="init()">
    
    <mx:Script>
        <![CDATA[
        	import mx.controls.Alert;
        	import mx.events.CloseEvent;
        	import org.granite.tide.data.Conflicts;
        	import org.granite.tide.data.events.TideDataConflictsEvent;
            import test.granite.spring.entity.Person;
            import test.granite.spring.entity.Contact;
            import mx.collections.ListCollectionView;
            import mx.collections.ArrayCollection;
            
            import org.granite.tide.spring.Spring;
            import org.granite.tide.spring.Context;
            import org.granite.tide.spring.Identity;
            import org.granite.tide.events.*;
            import org.granite.tide.service.DefaultServiceInitializer;
            
            import test.granite.AddressBookModule;

			Spring.getInstance().addComponentWithFactory("serviceInitializer", DefaultServiceInitializer, 
				{ contextRoot: "/graniteds-tide-spring" });
            Spring.getInstance().addModule(AddressBookModule);
            

			private function init():void {
				identity.isLoggedIn();
				
            	Spring.getInstance().getSpringContext().addEventListener(TideDataConflictsEvent.DATA_CONFLICTS, conflictsHandler);
            }
            
            private var _conflicts:Conflicts;
            
            private function conflictsHandler(event:TideDataConflictsEvent):void {
            	_conflicts = event.conflicts;
            	Alert.show("Someone else has modified the person you are currently working on.\nDo you want to keep your modifications ?", 
            		"Modification conflict", Alert.YES | Alert.NO, null, conflictsCloseHandler);
            }
            
            private function conflictsCloseHandler(event:CloseEvent):void {
            	if (event.detail == Alert.YES)
            		_conflicts.acceptAllClient();
            	else
            		_conflicts.acceptAllServer();
            }
			
            
            [Bindable] [In]
            public var identity:Identity;
            
            [Bindable] [In]
            public var people:ListCollectionView;
            
            [Bindable] [In]
            public var person:Person;
            
            [Bindable] [In]
            public var contact:Contact;
        ]]>
    </mx:Script>


    <mx:ViewStack id="appView" selectedIndex="{identity.loggedIn ? 1 : 0}" width="100%" height="100%">

        <mx:VBox width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" >
            <Login id="loginView"/>
        </mx:VBox>

        <mx:VBox id="loggedInView">
            <mx:ApplicationControlBar id="acb" width="100%">
                <mx:Label text="Granite Data Services (Address Book Demo)" fontSize="18" fontWeight="bold" color="#f0f0f0"/>
                <mx:Spacer width="100%"/>
                <mx:Label text="Search" color="#f0f0f0"/>
                <mx:TextInput id="fSearch" enter="dispatchEvent(new TideUIEvent('search', fSearch.text));"/>
                <mx:Button label="Go" click="dispatchEvent(new TideUIEvent('search', fSearch.text))"/>
                <mx:Label text="Logged as {identity.username}" color="#f0f0f0"/>
                <mx:Button label="Logout" click="identity.logout();"/>
            </mx:ApplicationControlBar>

            <mx:HBox width="100%" height="100%">
                <mx:VBox width="300" height="100%" id="vbPersons">
                    <mx:Panel id="pPersons" title="Persons" width="100%" height="100%">
                        <cs:DataGrid id="persons" dataProvider="{people}" width="100%" height="100%"
                            liveScrolling="false"
                            change="dispatchEvent(new TideUIEvent('selectPerson', persons.selectedItem));">
                            <cs:columns>
                                <cs:DataGridColumn dataField="salutation" headerText=""/>
                                <cs:DataGridColumn dataField="firstName" headerText="First name"/>
                                <cs:DataGridColumn dataField="lastName" headerText="Last name"/>
                            </cs:columns>
                        </cs:DataGrid>

                        <mx:ControlBar>
                            <mx:Button label="New" 
                                click="persons.selectedItem = null; dispatchEvent(new TideUIEvent('newPerson'));"/>
                            <mx:Button label="Edit" enabled="{Boolean(persons.selectedItem)}" 
                                visible="{identity.ifAllGranted('ROLE_ADMIN')}"
                                click="dispatchEvent(new TideUIEvent('editPerson', persons.selectedItem));"/>
                            <mx:Button label="Delete" enabled="{Boolean(persons.selectedItem)}" 
                                visible="{identity.ifAllGranted('ROLE_ADMIN')}"
                                click="dispatchEvent(new TideUIEvent('askDeletePerson'));"/>
                            <!--mx:Button label="100" 
                                click="dispatchEvent(new TideUIEvent('create100'));"/-->
                        </mx:ControlBar>
                    </mx:Panel>
                </mx:VBox>

                <mx:VBox width="100%" height="100%" id="vbContacts">
                    <mx:Panel id="pContacts" title="Contacts" width="100%" height="100%">
                        <cs:DataGrid id="contacts" dataProvider="{person.contacts}"
                            width="100%" height="100%">
                            <cs:columns>
                                <cs:DataGridColumn dataField="phone" headerText="Phone"/>
                                <cs:DataGridColumn dataField="mobile" headerText="Mobile"/>
                                <cs:DataGridColumn dataField="fax" headerText="Fax" />
                                <cs:DataGridColumn dataField="email" headerText="Email"/>
                                <cs:DataGridColumn dataField="address.address1" headerText="Address 1"/>
                                <cs:DataGridColumn dataField="address.address2" headerText="Address 2"/>
                                <cs:DataGridColumn dataField="address.zipcode" headerText="Zipcode"/>
                                <cs:DataGridColumn dataField="address.city" headerText="City"/>
                            </cs:columns>
                        </cs:DataGrid>

                        <mx:ControlBar visible="{identity.ifAllGranted('ROLE_ADMIN')}">
                            <mx:Button label="New" enabled="{Boolean(persons.selectedItem)}" 
                                click="dispatchEvent(new TideUIEvent('newContact'));"/>
                            <mx:Button label="Edit" enabled="{Boolean(contacts.selectedItem)}"
                                click="dispatchEvent(new TideUIEvent('editContact', contacts.selectedItem));"/>
                            <mx:Button label="Delete" enabled="{Boolean(contacts.selectedItem)}" 
                                click="dispatchEvent(new TideUIEvent('askDeleteContact', contacts.selectedItem));"/>
                        </mx:ControlBar>
                    </mx:Panel>
                </mx:VBox>
            </mx:HBox>
        </mx:VBox>

    </mx:ViewStack>

    <mx:states>
        <mx:State name="CreatePerson">
            <mx:AddChild relativeTo="{vbPersons}">
                <mx:Panel id="pNewPerson" title="New Person" width="100%">
                    <cs:EntityForm width="100%" id="fCreatePerson" data="{person}">
                        <cs:FormInput label="Salutation" dataField="salutation"/>
                        <cs:FormInput label="First Name" dataField="firstName"/>
                        <cs:FormInput label="Last Name" dataField="lastName"/>
                    </cs:EntityForm>

                    <mx:ControlBar>
                        <mx:Button id="saveNewPerson" label="Save"
                            click="dispatchEvent(new TideUIEvent('createPerson'));"/>
                        <mx:Button id="cancelPerson" label="Cancel" 
                            click="dispatchEvent(new TideUIEvent('cancelPerson'));"/>
                    </mx:ControlBar>
                </mx:Panel>
            </mx:AddChild>
            <mx:SetProperty target="{pPersons}" name="enabled" value="false"/>
            <mx:SetProperty target="{pContacts}" name="enabled" value="false"/>
        </mx:State>

        <mx:State name="EditPerson">
            <mx:AddChild relativeTo="{vbPersons}">
                <mx:Panel id="pEditPerson" title="Edit Person" width="100%">
                    <cs:EntityForm width="100%" id="fEditPerson" data="{person}">
                        <cs:FormInput label="Salutation" dataField="salutation"/>
                        <cs:FormInput label="First Name" dataField="firstName"/>
                        <cs:FormInput label="Last Name" dataField="lastName"/>
                    </cs:EntityForm>

                    <mx:ControlBar>
                        <mx:Button id="savePerson" label="Save"
                            click="dispatchEvent(new TideUIEvent('modifyPerson'));"/>
                        <mx:Button label="Cancel" 
                            click="dispatchEvent(new TideUIEvent('cancelPerson'));"/>
                    </mx:ControlBar>
                </mx:Panel>
            </mx:AddChild>
            <mx:SetProperty target="{pPersons}" name="enabled" value="false"/>
            <mx:SetProperty target="{pContacts}" name="enabled" value="false"/>
        </mx:State>

        <mx:State name="CreateContact">
            <mx:AddChild relativeTo="{vbContacts}">
                <mx:Panel id="pNewContact" title="New Contact" width="100%">
                    <cs:EntityForm id="fNewContact" width="100%" data="{contact}"
                        invalid="savContact.enabled = false">
                        <mx:FormItem width="100%">
                            <mx:HBox width="100%">
                                <mx:Form id="fNewContact1" width="50%">
                                    <cs:FormInput label="Phone" dataField="phone"/>
                                    <cs:FormInput label="Mobile" dataField="mobile"/>
                                    <cs:FormInput label="Fax" dataField="fax"/>
                                    <cs:FormInput label="Email" dataField="email"/>
                                </mx:Form>
                                <mx:Form id="fNewContact2" width="50%">
                                    <cs:FormInput label="Address 1" dataField="address.address1"/>
                                    <cs:FormInput label="Address 2" dataField="address.address2"/>
                                    <cs:FormInput label="Zipcode" dataField="address.zipcode"/>
                                    <cs:FormInput label="City" dataField="address.city"/>
                                    <!-- cs:FormInput label="Country" dataField="address.country"/ -->
                                </mx:Form>
                            </mx:HBox>
                        </mx:FormItem>
                    </cs:EntityForm>

                    <mx:ControlBar>
                        <mx:Button id="savContact" label="Save"
                            click="dispatchEvent(new TideUIEvent('createContact'));"/>
                        <mx:Button label="Cancel" 
                            click="dispatchEvent(new TideUIEvent('cancelContact'));"/>
                    </mx:ControlBar>
                </mx:Panel>
            </mx:AddChild>
            <mx:SetProperty target="{pPersons}" name="enabled" value="false"/>
            <mx:SetProperty target="{pContacts}" name="enabled" value="false"/>
        </mx:State>

        <mx:State name="EditContact">
            <mx:AddChild relativeTo="{vbContacts}">
                <mx:Panel id="pEditContact" title="Edit Contact" width="100%">
                    <cs:EntityForm id="fEditContact" width="100%" data="{contact}"
                        invalid="modContact.enabled = false">
                        <mx:FormItem width="100%">
                            <mx:HBox width="100%">
                                <mx:Form id="fEditContact1" width="50%">
                                    <cs:FormInput label="Phone" dataField="phone"/>
                                    <cs:FormInput label="Mobile" dataField="mobile"/>
                                    <cs:FormInput label="Fax" dataField="fax"/>
                                    <cs:FormInput label="Email" dataField="email"/>
                                </mx:Form>
                                <mx:Form id="fEditContact2" width="50%">
                                    <cs:FormInput label="Address 1" dataField="address.address1"/>
                                    <cs:FormInput label="Address 2" dataField="address.address2"/>
                                    <cs:FormInput label="Zipcode" dataField="address.zipcode"/>
                                    <cs:FormInput label="City" dataField="address.city"/>
                                    <!-- cs:FormInput label="Country" dataField="address.country"/ -->
                                </mx:Form>
                            </mx:HBox>
                        </mx:FormItem>
                    </cs:EntityForm>
                    
                    <mx:ControlBar>
                        <mx:Button id="modContact" label="Save"
                            click="dispatchEvent(new TideUIEvent('modifyContact'));"/>
                        <mx:Button label="Cancel" 
                            click="dispatchEvent(new TideUIEvent('cancelContact'));">
                        </mx:Button>
                    </mx:ControlBar>
                </mx:Panel>
            </mx:AddChild>
            <mx:SetProperty target="{pPersons}" name="enabled" value="false"/>
            <mx:SetProperty target="{pContacts}" name="enabled" value="false"/>
        </mx:State>
    </mx:states>

</mx:Application>
