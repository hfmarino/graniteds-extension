<?xml version="1.0" encoding="utf-8"?>

<mx:Canvas
    xmlns="*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	show="onShow()"
	hide="onHide()"
	hideEffect="{hideEffect}"
	showEffect="{showEffect}">

	<mx:Script>
		<![CDATA[
			import mx.validators.IValidatorListener;
			import mx.validators.ValidationResult;
			import mx.events.ValidationResultEvent;
			import mx.events.StateChangeEvent;
			import mx.core.Container;
			import mx.controls.DateField;
			import mx.controls.ComboBox;
			import flash.display.DisplayObject;
			import mx.core.Repeater;
			import mx.core.UIComponent;
			import mx.containers.VBox;
			import mx.containers.Form;
			import mx.containers.FormItem;
			import mx.controls.TextInput;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;

            import org.granite.tide.seam.Context;
			import org.granite.tide.seam.framework.StatusMessages;
			import org.granite.tide.seam.framework.ConversationList;
			import org.granite.tide.events.TideContextEvent;

			[In] [Bindable]
			public var tideContext:Context;

			[In] [Bindable]
			public var statusMessages:StatusMessages;
			
			[In] [Bindable]
			public var conversationList:ConversationList;
			
			[Bindable]
			public var sidebar:VBox = null;
			[Bindable]
			public var content:VBox = null;
			[Bindable]
			public var messages:Repeater = null;
			
			public function onShow():void {
			}
			
			public function onHide():void {
				if (messages)
					messages.dataProvider = null;
			}
			
			public function restoreState(event:TideContextEvent):void {
			}

			
			public function validateForm(form:Form, ...ignored):Boolean {
				return validateFormItems(form.getChildren(), ignored);
			}
			
			protected function validateFormItems(children:Array, ignored:Array):Boolean {
				var error:Boolean = false;
				for each (var child:DisplayObject in children) {
					
					if (ignore(child, ignored))
						continue;

					if (child is TextInput || child is ComboBox || child is DateField) {
						child.dispatchEvent(new FlexEvent(FlexEvent.VALUE_COMMIT));
						if (UIComponent(child).errorString && UIComponent(child).errorString != "")
							error = true;
					}
					else if (child is Container && !validateFormItems(Container(child).getChildren(), ignored))
						error = true;
				}
				return !error;
			}

			
			protected function resetForm(form:Form, ...ignored):void {
				resetFormItems(form.getChildren(), ignored);
			}
			
			protected function resetFormItems(children:Array, ignored:Array):void {
				for each (var child:DisplayObject in children) {
					
					if (ignore(child, ignored))
						continue;
					
					if (child is TextInput)
						TextInput(child).text = "";
					else if (child is ComboBox)
						ComboBox(child).selectedIndex = 0;
					else if (child is DateField)
						DateField(child).selectedDate = null;
					else if (child is Container)
						resetFormItems(Container(child).getChildren(), ignored);
					
					if (child is UIComponent)
						UIComponent(child).errorString = null;
				}
			}
			
			protected function ignore(child:DisplayObject, ignored:Array):Boolean {
				return ignored.length > 0 && (
					ignored.indexOf(child) >= 0 ||
					(child is UIComponent && ignored.indexOf(UIComponent(child).id) >= 0)
				);
			}
		]]>
	</mx:Script>

	<mx:Parallel id="hideEffect">
		<mx:Blur target="{sidebar}" blurYFrom="0.0" blurYTo="10.0"/>
		<mx:Dissolve target="{sidebar}" alphaFrom="1.0" alphaTo="0.0" />
		<mx:Blur target="{content}" blurYFrom="0.0" blurYTo="10.0"/>
		<mx:Dissolve target="{content}" alphaFrom="1.0" alphaTo="0.0" />
	</mx:Parallel>
	<mx:Parallel id="showEffect">
		<mx:Blur target="{sidebar}" blurYFrom="10.0" blurYTo="0.0"/>
		<mx:Dissolve target="{sidebar}" alphaFrom="0.0" alphaTo="1.0" />
		<mx:Blur target="{content}" blurYFrom="10.0" blurYTo="0.0"/>
		<mx:Dissolve target="{content}" alphaFrom="0.0" alphaTo="1.0" />
	</mx:Parallel>

	<mx:NumberFormatter id="priceFormatter" precision="2" />
	<mx:DateFormatter id="dateFormatter" formatString="EEE MMM DD YYYY"/>
	<mx:DateFormatter id="shortDateFormatter" formatString="YYYY-MM-DD"/>
	<mx:DateFormatter id="timeFormatter" formatString="HH:NN"/>

</mx:Canvas>