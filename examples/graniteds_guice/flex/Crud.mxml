<?xml version="1.0" encoding="utf-8"?>

<!--
  GRANITE DATA SERVICES
  Copyright (C) 2007-2010 ADEQUATE SYSTEMS SARL

  This file is part of Granite Data Services.

  Granite Data Services is free software; you can redistribute it and/or modify
  it under the terms of the GNU Library General Public License as published by
  the Free Software Foundation; either version 2 of the License, or (at your
  option) any later version.

  Granite Data Services is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License
  for more details.

  You should have received a copy of the GNU Library General Public License
  along with this library; if not, see <http://www.gnu.org/licenses/>.
-->

<!--
 ! @author Matt GIACOMI
 !-->
<mx:Application
  xmlns:mx="http://www.adobe.com/2006/mxml"
  xmlns="*"
  verticalGap="0"
  layout="vertical"
  verticalAlign="middle"
  backgroundGradientColors="[#0e2e7d, #6479ab]"
  creationComplete="refresh()">

  <mx:Script>
    <![CDATA[
      import mx.collections.ArrayCollection;
      import mx.controls.Alert;
      import mx.rpc.events.ResultEvent;
      import mx.rpc.events.FaultEvent;
      import mx.managers.CursorManager;

      import test.granite.ejb3.entity.Car;

      [Bindable]
      private var cars:ArrayCollection;

      private function refresh():void {
          srv.getCars();
      }

      private function faultHandler(fault:FaultEvent):void {
          CursorManager.removeBusyCursor();
          Alert.show(
              "code:\n" + fault.fault.faultCode + "\n\nMessage:\n" + fault.fault.faultString + "\n\nDetail:\n" + fault.fault.faultDetail,
              "RemoteObject Error"
          );
      }

      private function getCarsResult(evt:ResultEvent):void {
          cars = ArrayCollection(evt.result);
      }

      private function create():void {
          var car:Car = new Car();
          car.make = newMake.text;
          car.model = newModel.text;
          car.color = newColor.text;
          srv.addCar(car);
          newMake.text = "";
          newModel.text = "";
          newColor.text = "";
      }

      private function update():void {
          if (!dg.selectedItem) {
              Alert.show("You must select a record first", "Error");
              return;
          }

          var car:Car = new Car();
          car.id = dg.selectedItem.id;
          car.make = existingMake.text;
          car.model = existingModel.text;
          car.color = existingColor.text;
          srv.updateCar(car);
      }

      private function remove():void {
          if (!dg.selectedItem) {
              Alert.show("You must select a record first", "Error");
              return;
          }

          var car:Car = new Car();
          car.id = dg.selectedItem.id;
          srv.removeCar(car);
      }
    ]]>
  </mx:Script>

  <mx:RemoteObject id="srv" destination="cars" fault="faultHandler(event)" showBusyCursor="true">
    <mx:method name="getCars" result="getCarsResult(event)" />
    <mx:method name="addCar" result="refresh()" />
    <mx:method name="removeCar" result="refresh()" />
    <mx:method name="updateCar" result="refresh()" />
  </mx:RemoteObject>

  <mx:VBox width="100%" height="100%">

    <mx:ApplicationControlBar id="acb" width="100%">
      <mx:Label text="Granite Data Services (Guice CRUD Demo)" fontSize="18" fontWeight="bold" color="#f0f0f0"/>
    </mx:ApplicationControlBar>

    <mx:Panel title="Select a row to edit or delete the car" height="100%" width="100%">
      <mx:DataGrid id="dg" width="100%" height="100%" rowCount="5" dataProvider="{cars}">
        <mx:columns>
          <mx:DataGridColumn dataField="make" headerText="Make" />
          <mx:DataGridColumn dataField="model" headerText="Model" />
          <mx:DataGridColumn dataField="color" headerText="Color" />
        </mx:columns>
      </mx:DataGrid>
    </mx:Panel>

    <mx:HDividedBox width="100%">

      <mx:Panel title="Add a new Car" width="100%">
        <mx:Form width="100%" height="100%">
          <mx:FormItem label="Make">
            <mx:TextInput id="newMake" width="200" />
          </mx:FormItem>
          <mx:FormItem label="Model">
            <mx:TextInput id="newModel" width="200" />
          </mx:FormItem>
          <mx:FormItem label="Color">
            <mx:TextInput id="newColor" width="200" />
          </mx:FormItem>
        </mx:Form>
        <mx:ControlBar>
          <mx:Button label="Create" click="create()" />
        </mx:ControlBar>
      </mx:Panel>

      <mx:Panel title="Edit existing Car" width="100%">
        <mx:Form width="100%" height="100%">
          <mx:FormItem label="Make">
            <mx:TextInput id="existingMake" text="{dg.selectedItem.make}" width="200" />
          </mx:FormItem>
          <mx:FormItem label="Model">
            <mx:TextInput id="existingModel" text="{dg.selectedItem.model}" width="200" />
          </mx:FormItem>
          <mx:FormItem label="Color">
            <mx:TextInput id="existingColor" text="{dg.selectedItem.color}" width="200" />
          </mx:FormItem>
        </mx:Form>
        <mx:ControlBar>
          <mx:Button label="Update" click="update()" />
          <mx:Button label="Remove" click="remove()" />
        </mx:ControlBar>
      </mx:Panel>

    </mx:HDividedBox>

  </mx:VBox>

</mx:Application>
