/**
 * Generated by Gas3 v2.2.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (Car.as).
 */

package test.granite.ejb3.entity {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import org.granite.collections.IPersistentCollection;
    import org.granite.meta;

    use namespace meta;

    [Bindable]
    public class CarBase implements IExternalizable {

        private var __initialized:Boolean = true;
        private var __detachedState:String = null;

        private var _color:String;
        private var _id:int;
        private var _make:String;
        private var _model:String;

        meta function isInitialized(name:String = null):Boolean {
            if (!name)
                return __initialized;

            var property:* = this[name];
            return (
                (!(property is Car) || (property as Car).meta::isInitialized()) &&
                (!(property is IPersistentCollection) || (property as IPersistentCollection).isInitialized())
            );
        }

        public function set color(value:String):void {
            _color = value;
        }
        public function get color():String {
            return _color;
        }

        public function set id(value:int):void {
            _id = value;
        }
        public function get id():int {
            return _id;
        }

        public function set make(value:String):void {
            _make = value;
        }
        public function get make():String {
            return _make;
        }

        public function set model(value:String):void {
            _model = value;
        }
        public function get model():String {
            return _model;
        }

        public function readExternal(input:IDataInput):void {
            __initialized = input.readObject() as Boolean;
            __detachedState = input.readObject() as String;
            if (meta::isInitialized()) {
                _color = input.readObject() as String;
                _id = input.readObject() as int;
                _make = input.readObject() as String;
                _model = input.readObject() as String;
            }
            else {
                _id = input.readObject() as int;
            }
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(__initialized);
            output.writeObject(__detachedState);
            if (meta::isInitialized()) {
                output.writeObject(_color);
                output.writeObject(_id);
                output.writeObject(_make);
                output.writeObject(_model);
            }
            else {
                output.writeObject(_id);
            }
        }
    }
}