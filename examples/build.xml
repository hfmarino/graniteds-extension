<?xml version="1.0" encoding="UTF-8"?>

<!--
  GRANITE DATA SERVICES
  Copyright (C) 2007-2010 ADEQUATE SYSTEMS SARL

  This file is part of Granite Data Services.

  Granite Data Services is free software; you can redistribute it and/or modify
  it under the terms of the GNU Library General Public License as published by
  the Free Software Foundation; either version 2 of the License, or (at your
  option) any later version.

  Granite Data Services is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License
  for more details.

  You should have received a copy of the GNU Library General Public License
  along with this library; if not, see <http://www.gnu.org/licenses/>.
-->

<project name="graniteds-example" default="deploy" basedir=".">
	
	<fail unless="Name"
		message="The 'examples/build.xml' file must be run from one of the 'examples/*/build.xml' file"/>
	
    <!--
     ! Properties: EDIT THE 'examples/env.properties' FILE TO REFLECT YOUR ENVIRONMENT.
     !-->
	<dirname property="gds.dir" file="${main.build}/../" />

    <property file="${gds.dir}/examples/env.properties"/>
	<xmlproperty prefix="eclipse" file=".project"/>
	<property name="gds.lib" value="${gds.dir}/lib"/>
	<property name="gds.build" value="${gds.dir}/build"/>
	<property name="resources.dir" value="resources"/>
	<property name="flex.use.tide" value="false"/>
	<property name="services.config" value="${resources.dir}/WEB-INF/flex/services-config.xml"/>
	
	<condition property="eclipse">
		<contains string="${java.class.path}" substring="org.eclipse.swt"/>
	</condition>

	<condition property="flexbuilder">
		<contains string="${eclipse.projectDescription.natures.nature}" substring="flexbuilder"/>
	</condition>
	
	<condition property="build.war">
		<or>
			<isset property="war.packaging"/>
			<isset property="exploded.war.packaging"/>
		</or>
	</condition>
	<condition property="build.ear">
		<or>
			<isset property="ear.packaging"/>
			<isset property="exploded.ear.packaging"/>
		</or>
	</condition>

	<!--
     ! Build Message.
     !-->
    <echo message="==============================================================================="/>
    <echo message="  Building ${Name}"/>
    <echo message="  "/>
    <echo message="  $FLEX_HOME = ${FLEX_HOME}"/>
    <echo message="  $FLEX_TASKS_JAR = ${FLEX_TASKS_JAR}"/>
    <echo message="  "/>
    <echo message="  $SERVER_HOME = ${SERVER_HOME}"/>
    <echo message="  $SERVER_HOME_DEPLOY = ${SERVER_HOME_DEPLOY}"/>
    <echo message="  "/>
    <echo message="  $gds.dir = ${gds.dir}"/>
    <echo message="  $gds.lib = ${gds.lib}"/>
    <echo message="  $gds.build = ${gds.build}"/>
    <echo message="  "/>
    <echo message="  $eclipse = ${eclipse}"/>
    <echo message="  $flexbuilder = ${flexbuilder}"/>
    <echo message="==============================================================================="/>

    <!--
     ! Flex SDK tasks (mxmlc, compc, html-wrapper).
     !-->
    <taskdef resource="flexTasks.tasks" classpath="${FLEX_TASKS_JAR}" />
		
    <!--
     ! Jar dependencies (used conditionally).
     !-->
	<path id="ejb3.jar">
		<fileset dir="${gds.lib}">
			<include name="ejb3-persistence.jar"/>
			<include name="hibernate-annotations.jar"/>
			<include name="hibernate-commons-annotations.jar"/>
		</fileset>
		<fileset dir="${gds.build}">
			<include name="granite.jar"/>
			<include name="granite-spring.jar"/>
			<include name="granite-seam.jar"/>
		</fileset>
	</path>
	<path id="datanucleus.enhancer.classpath">
		<fileset dir="${gds.lib}">
			<include name="asm-3.0.jar"/>
			<include name="datanucleus-core.jar"/>
			<include name="datanucleus-enhancer.jar"/>
			<include name="datanucleus-jpa.jar"/>
			<include name="jdo2-api-2.3-SNAPSHOT.jar"/>
			<include name="ejb3-persistence.jar"/>
		</fileset>
		<fileset dir="${gds.build}">
			<include name="granite.jar"/>
		</fileset>
	</path>
	<fileset id="log4j.jar" dir="${gds.lib}">
		<include name="log4j.jar" if="log4j.lib"/>
	</fileset>
	<fileset id="jetty-util.jar" dir="${gds.lib}">
		<include name="jetty-util*.jar" if="jetty-util.lib"/>
	</fileset>
	<fileset id="hibernate.jar" dir="${gds.lib}">
		<include name="ejb3-persistence.jar" if="hibernate.lib"/>
		<include name="hibernate3.jar" if="hibernate.lib"/>
		<include name="hibernate-annotations.jar" if="hibernate.lib"/>
		<include name="hibernate-commons-annotations.jar" if="hibernate.lib"/>
		<include name="dom4j.jar" if="hibernate.lib"/>
		<include name="antlr-2.7.7.jar" if="hibernate.lib"/>
		<include name="asm-1.5.3.jar" if="hibernate.lib"/>
		<include name="cglib-2.1_3.jar" if="hibernate.lib"/>
		<include name="javassist.jar" if="hibernate.lib"/>
		<include name="jta.jar" if="hibernate.lib"/>
		<include name="commons-collections.jar" if="hibernate.lib"/>
		<include name="slf4j-api.jar" if="hibernate.lib"/>
		<include name="slf4j-log4j12.jar" if="hibernate.lib"/>
	</fileset>
	<fileset id="hibernate-entitymanager.jar" dir="${gds.lib}">
		<include name="ejb3-persistence.jar" if="hibernate-entitymanager.lib"/>
		<include name="hibernate3.jar" if="hibernate-entitymanager.lib"/>
		<include name="hibernate-entitymanager.jar" if="hibernate-entitymanager.lib"/>
		<include name="hibernate-annotations.jar" if="hibernate-entitymanager.lib"/>
		<include name="hibernate-commons-annotations.jar" if="hibernate-entitymanager.lib"/>
		<include name="dom4j.jar" if="hibernate-entitymanager.lib"/>
		<include name="antlr-2.7.7.jar" if="hibernate-entitymanager.lib"/>
		<include name="jta.jar" if="hibernate-entitymanager.lib"/>
		<include name="commons-collections.jar" if="hibernate-entitymanager.lib"/>
		<include name="javassist.jar" if="hibernate-entitymanager.lib"/>
		<include name="jboss-common.jar" if="hibernate-entitymanager.lib"/>
		<include name="slf4j-api.jar" if="hibernate-entitymanager.lib"/>
		<include name="slf4j-log4j12.jar" if="hibernate-entitymanager.lib"/>
	</fileset>
	<fileset id="hibernate-validator.jar" dir="${gds.lib}">
		<include name="hibernate-validator.jar" if="hibernate-validator.lib"/>
		<include name="hibernate-commons-annotations.jar" if="hibernate-validator.lib"/>
		<include name="slf4j-api.jar" if="hibernate-validator.lib"/>
		<include name="slf4j-log4j12.jar" if="hibernate-validator.lib"/>
	</fileset>
	<fileset id="hsqldb.jar" dir="${gds.lib}">
		<include name="hsqldb.jar" if="hsqldb.lib"/>
	</fileset>
	<fileset id="granite-hibernate.jar" dir="${gds.build}">
		<include name="granite-hibernate.jar" if="gds-hibernate.lib"/>
	</fileset>
	<fileset id="toplink.jar" dir="${gds.lib}">
		<include name="toplink*.jar" if="toplink.lib"/>
	</fileset>
	<fileset id="granite-toplink.jar" dir="${gds.build}">
		<include name="granite-toplink.jar" if="gds-toplink.lib"/>
	</fileset>
	<fileset id="eclipselink.jar" dir="${gds.lib}">
		<include name="eclipselink*.jar" if="eclipselink.lib"/>
	</fileset>
	<fileset id="eclipselink.jar" dir="${gds.lib}">
		<include name="eclipselink*.jar" if="eclipselink.lib"/>
		<include name="ejb3-persistence.jar" if="eclipselink.lib"/>
		<include name="jta.jar" if="eclipselink.lib"/>
	</fileset>
	<fileset id="granite-eclipselink.jar" dir="${gds.build}">
		<include name="granite-eclipselink.jar" if="gds-eclipselink.lib"/>
	</fileset>
	<fileset id="openjpa.jar" dir="${gds.lib}">
		<include name="openjpa*.jar" if="openjpa.lib"/>
	</fileset>
	<fileset id="granite-openjpa.jar" dir="${gds.build}">
		<include name="granite-openjpa.jar" if="gds-openjpa.lib"/>
	</fileset>
	<fileset id="datanucleus.jar" dir="${gds.lib}">
		<include name="datanucleus*.jar" if="datanucleus.lib"/>
		<include name="asm-3.0.jar" if="datanucleus.lib"/>
		<include name="jdo2-api-2.3-SNAPSHOT.jar" if="datanucleus.lib"/>
		<include name="ejb3-persistence.jar" if="datanucleus.lib"/>
		<include name="jta.jar" if="datanucleus.lib"/>
	</fileset>
	<fileset id="granite-datanucleus.jar" dir="${gds.build}">
		<include name="granite-datanucleus.jar" if="gds-datanucleus.lib"/>
	</fileset>
	<fileset id="spring.jar" dir="${gds.lib}">
		<include name="spring-*.jar" if="spring.lib"/>
		<include name="aopalliance-*.jar" if="spring.lib"/>
		<include name="aspectj*.jar" if="spring.lib"/>
		<include name="cglib-2.1_3.jar" if="spring.lib"/>
		<include name="asm-1.5.3.jar" if="spring.lib"/>
		<include name="commons-logging.jar" if="spring.lib"/>
		<include name="backport-util-concurrent*.jar" if="spring.lib"/>
		<exclude name="spring-security-*-3*.jar" if="spring.lib"/>
	</fileset>
	<fileset id="spring3.jar" dir="${gds.lib}">
		<include name="org.springframework.*-3*.jar" if="spring3.lib"/>
		<include name="spring-security-*-3*.jar" if="spring3.lib"/>
		<include name="aopalliance-*.jar" if="spring3.lib"/>
		<include name="aspectj*.jar" if="spring3.lib"/>
		<include name="cglib-2.1_3.jar" if="spring3.lib"/>
		<include name="asm-1.5.3.jar" if="spring3.lib"/>
		<include name="commons-logging.jar" if="spring3.lib"/>
		<include name="backport-util-concurrent*.jar" if="spring3.lib"/>
	</fileset>
	<fileset id="granite-spring.jar" dir="${gds.build}">
		<include name="granite-spring.jar" if="gds-spring.lib"/>
	</fileset>
	<fileset id="seam.jar" dir="${gds.lib}">
		<include name="jboss-el.jar" if="seam.lib"/>
	</fileset>
	<fileset id="seam-deps.jar" dir="${gds.lib}">
		<include name="javassist-3.6.jar" if="seam-deps.lib"/>
		<include name="dom4j.jar" if="seam-deps.lib"/>
	</fileset>
	<fileset id="seamcore.jar" dir="${gds.lib}">
		<include name="jboss-seam.jar" if="seam.lib"/>
	</fileset>
	<fileset id="granite-seam.jar" dir="${gds.build}">
		<include name="granite-seam21.jar" if="gds-seam.lib"/>
	</fileset>
	<fileset id="guice.jar" dir="${gds.lib}">
		<include name="guice-*.jar" if="guice.lib"/>
		<include name="warp-*.jar" if="guice.lib"/>
		<include name="aopalliance-*.jar" if="guice.lib"/>
	</fileset>
	<fileset id="granite-guice.jar" dir="${gds.build}">
		<include name="granite-guice.jar" if="gds-guice.lib"/>
	</fileset>
	<fileset id="granite-cdi.jar" dir="${gds.build}">
		<include name="granite-cdi.jar" if="gds-cdi.lib"/>
	</fileset>
	<fileset id="granite-beanvalidation.jar" dir="${gds.build}">
		<include name="granite-beanvalidation.jar" if="gds-beanvalidation.lib"/>
	</fileset>

    <!--
     ! Compile Java sources (unless this script is launched from Eclipse).
     !-->
	<target name="mkdir.classes">
     	<mkdir dir="classes"/>
	</target>
    <target name="build.javac" unless="eclipse" depends="mkdir.classes"
     	description="Compile Java sources (unless this script is launched from Eclipse)">

        <path id="gds.classpath">
            <fileset dir="${gds.build}" includes="*.jar"/>
            <fileset dir="${gds.lib}" includes="*.jar">
            	<exclude name="jboss-seam-*.jar"/>
        	</fileset>
        </path>

        <javac destdir="classes" srcdir="src" classpathref="gds.classpath" debug="true"
            target="1.5" source="1.5"/>
        <copy todir="classes">
            <fileset dir="src">
                <include name="*.xml"/>
                <include name="*.properties"/>
                <include name="META-INF/**"/>
            </fileset>
        </copy>
    </target>

    <!--
     ! DataNucleus specific (run the enhancer).
     !-->	
	<target name="datanucleus.enhance" if="datanucleus.lib"
		description="DataNucleus specific (run the enhancer)">

		<taskdef name="datanucleusenhancer" classpathref="datanucleus.enhancer.classpath" 
	        classname="org.datanucleus.enhancer.tools.EnhancerTask" onerror="ignore"/>
	    <datanucleusenhancer api="JPA" dir="." failonerror="true" verbose="true">
	        <fileset refid="entity.path"/>
	        <classpath>
	            <path refid="datanucleus.enhancer.classpath"/>
	        	<path location="classes"/>
	        </classpath>
	    </datanucleusenhancer>
	</target>
	
    <!--
     ! Build swf (if swf is out of date).
     !-->
    <target name="copy.mxml" unless="flexbuilder">
        <mkdir dir="build"/>
        <mkdir dir="build/swf"/>
        <copy todir="build/swf">
            <fileset dir="flex">
                <include name="**/*.as"/>
                <include name="**/*.mxml"/>
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.png"/>
                <include name="**/*.css"/>
            </fileset>
        </copy>
    </target>
    <target name="check.swf" depends="copy.mxml">
    	<condition property="skip.mxmlc">
    		<or>
    	    	<isset property="flexbuilder"/>
		        <uptodate targetfile="build/swf/${flex.application}.swf">
		            <srcfiles dir="${FLEX_HOME}/frameworks" includes="**"/>
		            <srcfiles dir="build/swf" includes="**/*.mxml"/>
		            <srcfiles dir="build/swf" includes="**/*.as"/>
		            <srcfiles dir="${gds.build}" includes="granite-essentials.swc"/>
		            <srcfiles dir="${gds.build}" includes="granite.swc"/>
		            <srcfiles dir="${resources.dir}" includes="WEB-INF/flex/services-config.xml"/>
		        </uptodate>
    		</or>
    	</condition>
    </target>
    <target name="build.mxml" depends="check.swf" unless="skip.mxmlc"
    	description="Build swf (if swf is out of date)">

    	<mkdir dir="build"/>
        <mkdir dir="build/swf"/>
        <mxmlc
            file="build/swf/${flex.application}.mxml"
            output="build/swf/${flex.application}.swf"
            services="${services.config}"
            context-root="${flex.context.root}"
            use-network="false"
            keep-generated-actionscript="true"
            debug="true"
            incremental="true">

            <load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>

            <source-path path-element="${FLEX_HOME}/frameworks"/>
            <source-path path-element="build/swf"/>
        	
        	<!-- Standard annotations -->
			<keep-as3-metadata name="Bindable"/>
		    <keep-as3-metadata name="Managed"/>
		    <keep-as3-metadata name="ChangeEvent"/>
		    <keep-as3-metadata name="NonCommittingChangeEvent"/>
		    <keep-as3-metadata name="Transient"/>

        	<!-- Tide annotations -->
        	<keep-as3-metadata name="Id"/>
        	<keep-as3-metadata name="Version"/>
        	<keep-as3-metadata name="Name"/>
        	<keep-as3-metadata name="In"/>
        	<keep-as3-metadata name="Inject"/>
        	<keep-as3-metadata name="Out"/>
        	<keep-as3-metadata name="Observer"/>
        	<keep-as3-metadata name="ManagedEvent"/>
        	<keep-as3-metadata name="Destroy"/>

        	<!-- All granite-essentials.swc classes are included in the output swf -->
            <compiler.include-libraries dir="${gds.build}" append="true">
                <include name="granite-essentials.swc" />
            </compiler.include-libraries>

        	<!-- Actually used only granite.swc classes are included in the output swf -->
        	<compiler.library-path dir="${gds.build}" append="true">
        		<include name="granite.swc"/>
        	</compiler.library-path>
        </mxmlc>
    </target>

    <!--
     ! Build example war (if enabled).
     !-->
    <target name="war" depends="build.mxml,build.javac,datanucleus.enhance" if="build.war"
    	description="Build example war (if enabled)">

    	<mkdir dir="build"/>
        <war destfile="build/${example.name}.war" webxml="${resources.dir}/WEB-INF/web.xml" >
            <zipfileset dir="${resources.dir}/WEB-INF" prefix="WEB-INF">
            	<include name="granite/**"/>
            	<include name="flex/**"/>
            	<include name="conf/**"/>
            	<include name="components.xml"/>
            	<include name="beans.xml"/>
            	<include name="*-web.xml"/>
            	<include name="*-servlet.xml"/>
        	</zipfileset>
			<zipfileset dir="${resources.dir}" prefix="WEB-INF/classes">
				<include name="META-INF/persistence.xml"/>
				<include name="META-INF/services-config.properties"/>
				<include name="seam.properties"/>
				<include name="log4j.properties"/>
			</zipfileset>
            <fileset dir="build/swf" includes="*.swf"/>
            <fileset dir="flex">
                <include name="*.js"/>
                <include name="*.html"/>
                <include name="*.gif"/>
            </fileset>
            <lib dir="${gds.build}">
            	<include name="granite.jar"/>
            </lib>
        	<lib refid="log4j.jar"/>
			<lib refid="jetty-util.jar"/>
            <lib refid="hibernate.jar"/>
            <lib refid="toplink.jar"/>
            <lib refid="eclipselink.jar"/>
            <lib refid="openjpa.jar"/>
            <lib refid="datanucleus.jar"/>
			<lib refid="hibernate-entitymanager.jar"/>
			<lib refid="hibernate-validator.jar"/>
			<lib refid="hsqldb.jar"/>
        	<lib refid="spring.jar"/>
        	<lib refid="spring3.jar"/>
        	<lib refid="guice.jar"/>
			<lib refid="seam.jar"/>
			<lib refid="seam-deps.jar"/>
			<lib refid="seamcore.jar"/>
    		<lib refid="granite-hibernate.jar"/>
    		<lib refid="granite-toplink.jar"/>
    		<lib refid="granite-eclipselink.jar"/>
    		<lib refid="granite-openjpa.jar"/>
    		<lib refid="granite-datanucleus.jar"/>
    		<lib refid="granite-spring.jar"/>
    		<lib refid="granite-seam.jar"/>
    		<lib refid="granite-cdi.jar"/>
    		<lib refid="granite-guice.jar"/>
    		<lib refid="granite-beanvalidation.jar"/>
        	<classes refid="entity.path"/>
        	<classes refid="service.path"/>
        	<classes refid="event.path"/>
        </war>
    </target>

    <!--
     ! Build example ear (if enabled).
     !-->	
	<target name="ear" depends="build.mxml,build.javac,datanucleus.enhance" if="build.ear"
		description="Build example ear (if enabled)">

		<mkdir dir="build"/>
		<mkdir dir="build/lib"/>
		<mkdir dir="build/swf"/>
		<copy todir="build/lib">
			<fileset dir="${gds.build}">
				<include name="granite.jar"/>
			</fileset>
			<fileset refid="jetty-util.jar"/>
			<fileset refid="hibernate.jar"/>
			<fileset refid="toplink.jar"/>
			<fileset refid="eclipselink.jar"/>
			<fileset refid="openjpa.jar"/>
			<fileset refid="datanucleus.jar"/>
			<fileset refid="hibernate-entitymanager.jar"/>
			<fileset refid="hibernate-validator.jar"/>
			<fileset refid="hsqldb.jar"/>
			<fileset refid="spring.jar"/>
			<fileset refid="spring3.jar"/>
			<fileset refid="guice.jar"/>
			<fileset refid="seam.jar"/>
			<fileset refid="seam-deps.jar"/>
			<fileset refid="granite-hibernate.jar"/>
			<fileset refid="granite-toplink.jar"/>
			<fileset refid="granite-eclipselink.jar"/>
			<fileset refid="granite-openjpa.jar"/>
			<fileset refid="granite-datanucleus.jar"/>
			<fileset refid="granite-spring.jar"/>
			<fileset refid="granite-seam.jar"/>
			<fileset refid="granite-cdi.jar"/>
			<fileset refid="granite-guice.jar"/>
			<fileset refid="granite-beanvalidation.jar"/>
		</copy>
		<jar destfile="build/${example.name}.jar">
			<zipfileset dir="${resources.dir}">
				<include name="META-INF/ejb-jar.xml"/>
				<include name="META-INF/jboss.xml"/>
				<include name="META-INF/services-config.properties"/>
				<include name="seam.properties"/>
				<include name="META-INF/persistence.xml" unless="separate-persistence-unit"/>
				<include name="META-INF/orm.xml" unless="separate-persistence-unit"/>
				<include name="import.sql"/>
			</zipfileset>
			<fileset refid="service.path"/>
			<fileset refid="entity.path"/>
        	<fileset refid="event.path"/>
		</jar>
		<jar destfile="build/${example.name}-persistence.jar">
			<zipfileset dir="${resources.dir}">
				<include name="META-INF/persistence.xml" if="separate-persistence-unit"/>
				<include name="META-INF/orm.xml" if="separate-persistence-unit"/>
			</zipfileset>
			<fileset refid="entity.path"/>
		</jar>
		<war destfile="build/${example.name}.war" webxml="${resources.dir}/WEB-INF/web.xml">
            <zipfileset dir="${resources.dir}/WEB-INF" prefix="WEB-INF">
            	<include name="granite/**"/>
            	<include name="flex/**"/>
            	<include name="conf/**"/>
            	<include name="components.xml"/>
            	<include name="beans.xml"/>
            	<include name="*-web.xml"/>
            	<include name="*-servlet.xml"/>
            </zipfileset>
            <fileset dir="build/swf" includes="*.swf"/>
            <fileset dir="flex">
                <include name="*.js"/>
                <include name="*.html"/>
                <include name="*.gif"/>
            </fileset>
		</war>
		<ear destfile="build/${example.name}.ear" appxml="${resources.dir}/META-INF/application.xml">
			<zipfileset dir="${resources.dir}/META-INF" prefix="META-INF">
				<include name="jboss-app.xml"/>
			</zipfileset>
			<fileset dir="build">
				<include name="${example.name}.war"/>
				<include name="${example.name}-persistence.jar" if="separate-persistence-unit"/>
				<include name="${example.name}.jar"/>
				<include name="lib/**"/>
			</fileset>
			<fileset refid="seamcore.jar"/>
		</ear>
	</target>
	
    <!--
     ! Deploy the war (exploded or not) or the ear (idem).
     !-->
	<target name="deploy.war" depends="war" if="war.packaging">
        <copy todir="${SERVER_HOME_DEPLOY}" overwrite="true">
            <fileset dir="build">
                <include name="${example.name}.war"/>
            </fileset>
        </copy>
	</target>
	<target name="deploy.exploded.war" depends="war" if="exploded.war.packaging">
		<unjar dest="build/${example.name}" src="build/${example.name}.war"/>
		<mkdir dir="${SERVER_HOME_DEPLOY}/${example.name}.war"/>
		<copy todir="${SERVER_HOME_DEPLOY}/${example.name}.war">
            <fileset dir="build/${example.name}">
                <include name="**"/>
            </fileset>
        </copy>
		<touch file="${SERVER_HOME_DEPLOY}/${example.name}.war/WEB-INF/web.xml"/>
	</target>
	<target name="deploy.ear" depends="ear" if="ear.packaging">
        <copy todir="${SERVER_HOME_DEPLOY}" overwrite="true">
            <fileset dir="build">
                <include name="${example.name}.ear"/>
            </fileset>
        </copy>
	</target>
	<target name="deploy.exploded.ear" depends="ear" if="exploded.ear.packaging">
		<delete dir="build/${example.name}"/>
		<unjar dest="build/${example.name}" src="build/${example.name}.ear"/>
		<unjar dest="build/${example.name}/${example.name}" src="build/${example.name}/${example.name}.war"/>
		<delete file="build/${example.name}/${example.name}.war"/>
		<move tofile="build/${example.name}/${example.name}.war" file="build/${example.name}/${example.name}"/>
		
		<mkdir dir="${SERVER_HOME_DEPLOY}/${example.name}.ear"/>
		<copy todir="${SERVER_HOME_DEPLOY}/${example.name}.ear">
            <fileset dir="build/${example.name}">
                <include name="**"/>
            </fileset>
        </copy>
		<touch file="${SERVER_HOME_DEPLOY}/${example.name}.ear/META-INF/application.xml"/>
	</target>
	
	<!--
	 ! Deploy datasource when needed
	 -->
	<target name="deploy.ds" if="datasource">
		<copy todir="${SERVER_HOME_DEPLOY}">
			<fileset dir="${resources.dir}">
				<include name="${datasource}"/>
			</fileset>
		</copy>
	</target>
	
    <!--
     ! Deploy specified archive (default target).
     !-->
    <target name="deploy" depends="deploy.war,deploy.exploded.war,deploy.ear,deploy.exploded.ear,deploy.ds"
    	description="Deploy example specified archive (default target)"/>
	
    <!--
     ! Deploy the example swf only (avoid full war/ear redeploy).
     !-->
    <target name="deploy.swf" depends="build.mxml"
    	description="Deploy the example swf only (avoid full war/ear redeploy)">
        <copy todir="${SERVER_HOME_DEPLOY}/${example.name}.ear/${example.name}.war">
            <fileset dir="build/swf">
                <include name="${flex.application}.swf"/>
                <include name="*.swf"/>
            </fileset>
        </copy>
    </target>


    <!--
     ! Clean up JBoss deployment, example build directory and swf.
     !-->
    <target name="clean.server">
        <delete file="${SERVER_HOME_DEPLOY}/${example.name}.war" failonerror="false"/>
        <delete file="${SERVER_HOME_DEPLOY}/${example.name}.ear" failonerror="false"/>
        <delete dir="${SERVER_HOME_DEPLOY}/${example.name}.war" failonerror="false"/>
        <delete dir="${SERVER_HOME_DEPLOY}/${example.name}.ear" failonerror="false"/>
    </target>
    <target name="clean.classes" unless="eclipse">
    	<delete dir="classes" failonerror="false"/>
    </target>
    <target name="clean.build" depends="clean.classes">
        <delete dir="build" excludes="build/swf" failonerror="false"/>
    </target>
    <target name="clean.swf" unless="flexbuilder">
        <delete dir="build/swf" failonerror="false"/>
    </target>
	<!--
	 ! Clean datasource when needed
	 -->
	<target name="clean.ds" if="datasource">
		<delete dir="${SERVER_HOME_DEPLOY}" failonerror="false">
			<include name="${datasource}"/>
		</delete>
	</target>
    <!--
     ! Clean (all).
     !-->
    <target name="clean" depends="clean.build,clean.swf,clean.server,clean.ds"
    	description="Clean build directories and deployed archive"/>

    <!--
     ! Clean up and (re)deploy.
     !-->
    <target name="clean.deploy" depends="clean,deploy"/>

    <!--
     ! Generate AS3 beans for entities.
     !-->
    <target name="define.gas3" unless="eclipse">
        <!-- Define the task if we are not in an Eclipse environment (*all* gas3
             jars must be in the classpath) -->
        <echo message="Defining gas3 task..."/>
        <taskdef name="gas3" classname="org.granite.generator.ant.AntJavaAs3Task">
        	<!--classpath>
        		<fileset dir="E:/java/builder/plugins">
        			<include name="org.granite.builder_2.2.0.GA.jar"/>
        		</fileset>
        		<fileset dir="C:/java/workspace34/graniteds_builder/lib">
        			<include name="*.jar"/>
        		</fileset>
        	</classpath-->
    	</taskdef>
    </target>
    <target name="generate.as3" depends="define.gas3"
    	description="Generate AS3 beans for example entities">

    	<gas3 outputdir="flex" tide="${flex.use.tide}"> 
    		<!--remotedestinationfactory="org.granite.generator.as3.DefaultRemoteDestinationFactory"
    		remotebasetemplate="file:///Java/workspace34/graniteds_builder/src/org/granite/generator/template/tideRemoteBase.gsp"-->
            <classpath>
                <pathelement location="classes"/>
            	<path refid="ejb3.jar"/>
            </classpath>
            <fileset refid="entity.path"/>
            <fileset refid="service.gen.path"/>
            <fileset refid="event.path"/>
        </gas3>
    </target>

</project>
